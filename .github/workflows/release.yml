# This is a basic workflow to help you get started with Actions

name: "CronitorCLI Release"

on:
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    name: Create Draft Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          # Currently we can't upload to a draft release so we are forced into this nonsense
          release_name: Draft Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-release-binaries:
    name: Create build assets
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 6
      matrix:
        goos: [linux, windows, freebsd]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v2
      - name: Go Release Binaries Normal Volume Size
        uses: wangyoucao577/go-release-action@v1.20
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          asset_name: "${{ matrix.goos }}_${{ matrix.goarch }}"
          goversion: "1.17"
          binary_name: "cronitor"
          sha256sum: true
          overwrite: true
          pre_command: 'export CGO_ENABLED=1'
          ldflags: '-linkmode external -w -extldflags "-static"'

  build-darwin-binaries:
    name: Create build assets for Darwin
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 6
      matrix:
        goos: [darwin]
        goarch: [amd64, arm64]
        
    steps:
      - uses: actions/checkout@v2
      - name: Go Release Binaries Normal Volume Size
        uses: wangyoucao577/go-release-action@v1.20
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          asset_name: "${{ matrix.goos }}_${{ matrix.goarch }}"
          goversion: "1.17"
          binary_name: "cronitor"
          sha256sum: true
          overwrite: true

  publish:
    name: Mark build complete
    runs-on: ubuntu-latest
    needs: build-release-binaries
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Update release
        uses: tubone24/update_release@v1.2.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          release_name: Release ${{ steps.get_version.outputs.VERSION  }}
